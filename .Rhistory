horas_trabajo,
sueldo)) %>%
cor(casen_correlacion, use = "pairwise.complete.obs") # Correlacion
filter(!is.na(trabajo_informal,
horas_trabajo,
tipo_trabjao,
contrato,
jornada_laboral,
horas_trabajo,
sueldo)) %>%
cor(casen_correlacion, use = "pairwise.complete.obs") # Correlacion
filter(!is.na(horas_trabajo,
tipo_trabjao,
contrato,
jornada_laboral,
horas_trabajo,
sueldo)) %>%
cor(casen_correlacion, use = "pairwise.complete.obs") # Correlacion
sjPlot::tab_corr(casen_correlacion,
triangle = "lower")
# 5. Matrices de Correlacion # ----
casen_correlacion <- casen %>% select(trabajo, # Trabajo
trabajo_informal, # Trabajo informal
horas_trabajo, # Horas trabajadas
tipo_trabajo, # Su trabajo es de tipo
contrato, # Tipo de contrato
jornada_labora, #Jornada laboral
horario_trabajo, #Tipo de horario
sueldo) # Sueldo
cor(casen_correlacion, use = "pairwise.complete.obs") # Correlacion
sjPlot::tab_corr(casen_correlacion,
triangle = "lower")
M <- cor(casen_correlacion, use = "complete.obs")
M
sjPlot::tab_corr(casen_correlacion,
triangle = "lower")
# Casos perdidos #
mean(casen_correlacion$trabajo); mean(casen_correlacion$trabajo_informal);
mean(casen_correlacion$horas_trabajo); mean(casen_correlacion$tipo_trabajo);
mean(casen_correlacion$contrato); mean(casen_correlacion$jornada_labora);
mean(casen_correlacion$horario_trabajo); mean(casen_correlacion$sueldo)
cor(casen_correlacion, use = "pairwise.complete.obs") # Correlacion
mean(casen_correlacion$trabajo, na.rm = TRUE); mean(casen_correlacion$trabajo_informal, na.rm = TRUE);
mean(casen_correlacion$horas_trabajo, na.rm = TRUE); mean(casen_correlacion$tipo_trabajo, na.rm = TRUE);
mean(casen_correlacion$contrato, na.rm = TRUE); mean(casen_correlacion$jornada_labora, na.rm = TRUE);
mean(casen_correlacion$horario_trabajo, na.rm = TRUE); mean(casen_correlacion$sueldo, na.rm = TRUE);
cor(casen_correlacion, use = "pairwise.complete.obs") # Correlacion
# 1. Instalacion de paquetes # ----
rm(list = ls()) #limpiar area de trabajo
pacman::p_load(dplyr, # Manipulacion datos
sjmisc, # Descriptivos
sjPlot, # Tablas
sjlabelled, #etiquetas
kableExtra, #Tablas
GGally, # Correlaciones
corrplot) # Correlaciones
options(scipen = 999) # para desactivar notacion cientifica
# 2. Cargar base de datos rocodificada # ----
load(url("https://github.com/panchamama/Practico-1/raw/main/1.%20input/casen_rec.rdata"))
dim(casen_rec)
casen_rec <- casen_rec %>% dplyr:: filter(edad >= 18 & edad <= 65) # Recodificacion por edad
sjmisc::descr(casen_rec,
show = c("label","range", "mean", "sd", "NA.prc", "n")) %>%
kable(.,"markdown")
# 3. Seleccion de variables # ----
casen <- casen_rec %>% select(sexo, # Sexo
educ, # Nivel educacional mas alto al cual asistio
trabajo, # Trabajo
trabajo_informal, # Trabajo informal
horas_trabajo, # Horas trabajadas
tipo_trabajo, # Su trabajo es de tipo
contrato, # Tipo de contrato
jornada_labora, #Jornada laboral
horario_trabajo, #Tipo de horario
sueldo, # Sueldo
nacionalidad, # Pais de nacionalidad
pueblo_originario) # Pertenece a algun pueblo indigena
frq(casen$sexo) # No es necesario recodificar
frq(casen$educ) # No es necesario recodificar
frq(casen$trabajo) # Recodificacion numerica
casen$trabajo <- recode(casen$trabajo, "No trabaja" = 0, "Trabaja" = 1)
summary(casen$trabajo) #Confirmacion
frq(casen$trabajo_informal) # Recodificacion numerica
casen$trabajo_informal <- recode(casen$trabajo_informal, "No trabaja" = 0, "Trabaja" = 1)
summary(casen$trabajo_informal) #Confirmacion
frq(casen$horas_trabajo) # Recodificacion numerica
casen$horas_trabajo<- recode(casen$horas_trabajo, "Inf promedio" = 0, "Promedio" = 0.5, "Sup promedio" = 1)
summary(casen$horas_trabajo) #Confirmacion
frq(casen$tipo_trabajo) # No es necesario recodificar
frq(casen$contrato) # No es necesario recodificar
frq(casen$jornada_labora) # No es necesario recodificar
frq(casen$horario_trabajo) # No es necesario recodificar
frq(casen$sueldo) # Recodificacion numerica
casen$sueldo<- recode(casen$sueldo, "Menos del salario minimo" = 0, "Salario promedio" = 0.5, "Salario sobre el promedio" = 1)
summary(casen$sueldo) #Confirmacion
frq(casen2$nacionalidad) # No es necesario recodificar
# 4. Matrices de Correlacion # ----
casen_correlacion <- casen %>% select(trabajo, # Trabajo
trabajo_informal, # Trabajo informal
horas_trabajo, # Horas trabajadas
tipo_trabajo, # Su trabajo es de tipo
contrato, # Tipo de contrato
jornada_labora, #Jornada laboral
horario_trabajo, #Tipo de horario
sueldo) # Sueldo
## 4.1 Casos NA ## ----
mean(casen_correlacion$trabajo); mean(casen_correlacion$trabajo_informal);
mean(casen_correlacion$horas_trabajo); mean(casen_correlacion$tipo_trabajo);
mean(casen_correlacion$contrato); mean(casen_correlacion$jornada_labora);
mean(casen_correlacion$horario_trabajo); mean(casen_correlacion$sueldo)
mean(casen_correlacion$trabajo, na.rm = TRUE); mean(casen_correlacion$trabajo_informal, na.rm = TRUE);
mean(casen_correlacion$horas_trabajo, na.rm = TRUE); mean(casen_correlacion$tipo_trabajo, na.rm = TRUE);
mean(casen_correlacion$contrato, na.rm = TRUE); mean(casen_correlacion$jornada_labora, na.rm = TRUE);
mean(casen_correlacion$horario_trabajo, na.rm = TRUE); mean(casen_correlacion$sueldo, na.rm = TRUE);
cor
## 4.2 Correlacion ## ----
cor(casen_correlacion, use = "pairwise.complete.obs") # Correlacion
M <- cor(casen_correlacion, use = "complete.obs")
M
sjPlot::tab_corr(casen_correlacion,
triangle = "lower")
corrplot.mixed(M)
# 0. Pasos previos # ----
rm(list = ls()) #limpiar area de trabajo
options(scipen = 999) #desactivar notacion cientifica
# 1. Cargar paquetes # ----
pacman::p_load(sjlabelled, dplyr, stargazer, sjmisc, summarytools, kableExtra, sjPlot, corrplot, sessioninfo, ggplot2)
# 2. Cargar base de datos # ----
load(url("https://github.com/panchamama/Practico-1/raw/main/1.%20input/casen_rec.rdata"))
# La base de datos recodificada, esta cargada desde internet.
names(casen_rec)
dim(casen_rec)
## 2.1 Recodificar base por edad ## ----
casen_rec <- casen_rec %>% dplyr:: filter(edad >= 18 & edad <= 65)
# 3. Descripcion de las variables # ----
## 3.1 Tablas descriptivas con descr, librería sjmiscsjmisc::descr ##
sjmisc::descr(casen_rec)
sjmisc::descr(casen_rec,
show = c("label","range", "mean", "sd", "NA.prc", "n"))%>%
kable(.,"markdown")
## 3.2 Tabla descriptiva con summarytools::dfSummarysummarytools::dfSummary ##
summarytools::dfSummary(casen_rec, plain.ascii = FALSE)
view(dfSummary(casen_rec, headings=FALSE)) # Visualizar mejor
# 1. Instalacion de paquetes # ----
rm(list = ls()) #limpiar area de trabajo
pacman::p_load(dplyr, # Manipulacion datos
sjmisc, # Descriptivos
sjPlot, # Tablas
sjlabelled, #etiquetas
kableExtra, #Tablas
GGally, # Correlaciones
corrplot) # Correlaciones
options(scipen = 999) # para desactivar notacion cientifica
# 2. Cargar base de datos rocodificada # ----
load(url("https://github.com/panchamama/Practico-1/raw/main/1.%20input/casen_rec.rdata"))
casen_rec <- casen_rec %>% dplyr:: filter(edad >= 18 & edad <= 65) # Recodificacion por edad
dim(casen_rec)
sjmisc::descr(casen_rec,
show = c("label","range", "mean", "sd", "NA.prc", "n")) %>%
kable(.,"markdown")
frq(casen_rec$trabajo) # Recodificacion numerica
casen_rec$trabajo <- recode(casen_rec$trabajo, "No trabaja" = 0, "Trabaja" = 1)
summary(casen_rec$trabajo) #Confirmacion
frq(casen_rec$trabajo_informal) # Recodificacion numerica
casen_rec$trabajo_informal <- recode(casen_rec$trabajo_informal, "No trabaja" = 0, "Trabaja" = 1)
summary(casen_rec$trabajo_informal) #Confirmacion
frq(casen_rec$horas_trabajo) # Recodificacion numerica
casen_rec$horas_trabajo <- recode(casen_rec$horas_trabajo, "Inf promedio" = 0, "Promedio" = 0.5, "Sup promedio" = 1)
summary(casen_rec$horas_trabajo) #Confirmacion
frq(casen_rec$sueldo) # Recodificacion numerica
casen_rec$sueldo<- recode(casen_rec$sueldo, "Menos del salario minimo" = 0, "Salario promedio" = 0.5, "Salario sobre el promedio" = 1)
summary(casen_rec$sueldo) #Confirmacion
# 4. Matrices de Correlacion # ----
casen_correlacion <- casen_rec %>% select(trabajo_informal, # Trabajo informal
horas_trabajo, # Horas trabajadas
tipo_trabajo, # Su trabajo es de tipo
contrato, # Tipo de contrato
jornada_labora, #Jornada laboral
horario_trabajo, #Tipo de horario
sueldo) # Sueldo
## 4.1 Listwise delection ## ----
df <- casen_correlacion # Respaldar base de datos
dim(casen_correlacion)
sum(is.na(casen_correlacion)) # Contamos los NA.s
colSums(is.na(casen_correlacion)) # Vemos donde estas los NA.s
casen_correlacion <- na.omit(casen_correlacion) # Eliminamos los NA.s
dim(casen_correlacion)
M <- cor(casen_correlacion, use = "complete.obs") # Matriz de correlacion
M
sjPlot::tab_corr(M, # Visualizacion
triangle = "lower")
corrplot.mixed(M)
# 5. Alfa de Cronbach # ----
# Asegúrate de tener el paquete psych instalado y cargado
if (!requireNamespace("psych", quietly = TRUE)) {
install.packages("psych")
}
library(psych)
# Calcular el alpha de Cronbach con la opción check.keys=TRUE
alpha_result <- psych::alpha(casen_correlacion, check.keys=TRUE)
# Ver los resultados
print(alpha_result)
# Ver cuáles variables fueron invertidas
print(alpha_result$keys)
# 6. Construccion de la escala # ----
casen_rec <- casen_rec %>%
rowwise() %>%
mutate(participacion_mercado_laboral = sum(trabajo,trabajo_informal,horas_trabajo,tipo_trabajo,contrato,jornada_labora,horario_trabajo,sueldo))
summary(casen_rec$participacion_mercado_laboral)
frq(casen_rec$participacion_mercado_laboral)
ggplot(casen_rec, aes(x = participacion_mercado_laboral)) +
geom_histogram(binwidth=0.6, colour="black", fill="yellow") +
theme_bw() +
xlab("Participacion en el mercado laboral") +
ylab("Cantidad")
# 7. Guardar base de datos ## ----
casen_reg <- casen_rec %>% select(participacion_mercado_laboral,
sexo,
educ,
nacionalidad,
pueblo_originario)
save(casen_reg,file = "1. input/casen_reg.rdata")
# 1. Instalacion de paquetes # ----
rm(list = ls()) #limpiar area de trabajo
casen_reg$educ <- as_factor(casen_reg$educ)
# 1. Instalacion de paquetes # ----
rm(list = ls()) #limpiar area de trabajo
pacman::p_load(dplyr,
car,
sjmisc,
sjPlot,
sjlabelled,
stargazer,
kableExtra,
corrplot,
texreg,
ggplot2,
ggpubr,
summarytools, # Tablas
sessioninfo, # Información de la sesión de trabajo
fastDummies, # Generar regresión
ggeffects) # Gráfico de valores predichos
# 2. Cargar la base de datos ----
load(url("https://github.com/panchamama/Practico-1/raw/main/1.%20input/casen_reg.rdata"))
dim(casen_reg)
view_df(casen_reg,max.len = 50)
# 3. Asociacion entre variables # ----
casen_reg <- casen_reg %>% select(participacion_mercado_laboral, sexo, educ, nacionalidad, pueblo_originario)
M <- cor(casen_reg, use = "complete.obs") # Usar solo casos con observaciones completas
diag(M) = NA # Elimina la diagonal (correlaciones absolutas de cada variable consigmo misma)
rownames(M) <- c("A. Participacion en el mescado laboral",
"B. Sexo",
"C. Educación",
"D. Nacionalidad",
"E. Pertenece a pueblo originario")
M <- cor(casen_reg, use = "complete.obs") # Usar solo casos con observaciones completas
# 3. Asociacion entre variables # ----
casen_reg <- casen_reg %>% select(participacion_mercado_laboral, sexo, educ, nacionalidad, pueblo_originario)
M <- cor(casen_reg, use = "complete.obs") # Usar solo casos con observaciones completas
# Convertir factores a numéricos si tiene sentido hacerlo
casen_reg <- data.frame(lapply(casen_reg, function(x) {
if (is.factor(x)) as.numeric(as.factor(x)) else x
}))
# Seleccionar solo las columnas numéricas
casen_reg_numeric <- casen_reg[sapply(casen_reg, is.numeric)]
# Calcular la matriz de correlación utilizando solo las observaciones completas
M <- cor(casen_reg_numeric, use = "complete.obs")
# Ver el resultado
print(M)
M <- cor(casen_reg, use = "complete.obs") # Usar solo casos con observaciones completas
diag(M) = NA # Elimina la diagonal (correlaciones absolutas de cada variable consigmo misma)
rownames(M) <- c("A. Participacion en el mescado laboral",
"B. Sexo",
"C. Educación",
"D. Nacionalidad",
"E. Pertenece a pueblo originario")
colnames(M) <-c("(A)", "(B)","(C)", "(D)", "(E)")
corrplot::corrplot(M,
method = "color", # Cambia los círculos por color completo de cada cuadrante
addCoef.col = "#000390", # Color de los coeficientes
type = "upper", # Deja solo las correlaciones de arriba
tl.col = "black", # COlor letras, rojo por defecto
na.label = "-")
View(casen_reg_numeric)
View(casen_reg)
# 1. Instalacion de paquetes # ----
rm(list = ls()) #limpiar area de trabajo
pacman::p_load(dplyr,
car,
sjmisc,
sjPlot,
sjlabelled,
stargazer,
kableExtra,
corrplot,
texreg,
ggplot2,
ggpubr,
summarytools, # Tablas
sessioninfo, # Información de la sesión de trabajo
fastDummies, # Generar regresión
ggeffects) # Gráfico de valores predichos
# 2. Cargar la base de datos ----
load(url("https://github.com/panchamama/Practico-1/raw/main/1.%20input/casen_reg.rdata"))
dim(casen_reg)
view_df(casen_reg,max.len = 50)
# 4. Regresiones # ----
casen_reg <- na.omit(casen_reg)
reg1 <- lm(participacion_mercado_laboral ~ 1, data=casen_reg)
stargazer(reg1, type="text")
# 4. Regresiones # ----
## 4.1 Nos aseguramos que las variables sean categoricas ##
casen_reg$educ <- as_factor(casen_reg$educ)
casen_reg$sexo <- as_factor(casen_reg$sexo)
casen_reg$nacionalidad <- as_factor(casen_reg$nacionalidad)
casen_reg$pueblo_originario <- as_factor(casen_reg$pueblo_originario)
## 4.2 Regresion ##
casen_reg <- na.omit(casen_reg)
reg1 <- lm(participacion_mercado_laboral ~ 1, data=casen_reg)
stargazer(reg1, type="text")
## 4.3 Regrasion lineal multiple ## ----
reg2 <- lm(participacion_mercado_laboral ~ sexo + educ, data=casen_reg)
reg3 <- lm(participacion_mercado_laboral ~ sexo + educ + nacionalidad, data=casen_reg)
reg4 <- lm(participacion_mercado_laboral ~ sexo + educ + nacionalidad + pueblo_originario, data=casen_reg)
knitreg(list(reg2, reg3, reg4,),
custom.model.names = c("Modelo 1",
"Modelo 2",
"Modelo 3"),
custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05",
custom.coef.names = c("Intercepto",
"Mujer <br> <i>(Ref. Hombre)</i>",
"Sin estudios <br> <i>(Ref. Ed. básica)</i>",
"Educación media",
"Educación superior",
"Postgrados",
"Nacionalidad extranjera <br> <i>(Ref. Nacionalidad chilena)</i>",
"Pertenece puablo originario <br> <i>(Ref. No pertenece pueblo originario)</i>"),
caption = "Participacion en el mercado laboral",
caption.above = TRUE)
#Verificar el número de coeficientes en un modelo para asegurarse de que custom.coef.names tenga la longitud correcta
length(coef(reg4))
knitreg(list(reg2, reg3, reg4,),
custom.model.names = c("Modelo 1",
"Modelo 2",
"Modelo 3"),
custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05",
custom.coef.names = c("Intercepto",
"Mujer <br> <i>(Ref. Hombre)</i>",
"Sin estudios <br> <i>(Ref. Ed. básica)</i>",
"Educación media",
"Educación superior",
"Postgrados",
"Nacionalidad extranjera <br> <i>(Ref. Nacionalidad chilena)</i>",
"Pertenece puablo originario <br> <i>(Ref. No pertenece pueblo originario)</i>"),
caption = "Participacion en el mercado laboral",
caption.above = TRUE)
knitreg(list(reg2, reg3, reg4,),
custom.model.names = c("Modelo 1",
"Modelo 2",
"Modelo 3"),
custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05",
custom.coef.names <- c("Intercepto",
"Mujer <br> <i>(Ref. Hombre)</i>",
"Sin estudios <br> <i>(Ref. Ed. básica)</i>",
"Educación media",
"Educación superior",
"Postgrados",
"Nacionalidad extranjera <br> <i>(Ref. Nacionalidad chilena)</i>",
"Pertenece puablo originario <br> <i>(Ref. No pertenece pueblo originario)</i>"),
caption = "Participacion en el mercado laboral",
caption.above = TRUE)
knitreg(list(reg2, reg3, reg4),
custom.model.names = c("Modelo 1",
"Modelo 2",
"Modelo 3"),
custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05",
custom.coef.names <- c("Intercepto",
"Mujer <br> <i>(Ref. Hombre)</i>",
"Sin estudios <br> <i>(Ref. Ed. básica)</i>",
"Educación media",
"Educación superior",
"Postgrados",
"Nacionalidad extranjera <br> <i>(Ref. Nacionalidad chilena)</i>",
"Pertenece puablo originario <br> <i>(Ref. No pertenece pueblo originario)</i>"),
caption = "Participacion en el mercado laboral",
caption.above = TRUE)
knitreg(list(reg2, reg3, reg4),
custom.model.names = c("Modelo 1",
"Modelo 2",
"Modelo 3"),
custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05",
custom.coef.names = c("Intercepto",
"Mujer <br> <i>(Ref. Hombre)</i>",
"Sin estudios <br> <i>(Ref. Ed. básica)</i>",
"Educación media",
"Educación superior",
"Postgrados",
"Nacionalidad extranjera <br> <i>(Ref. Nacionalidad chilena)</i>",
"Pertenece puablo originario <br> <i>(Ref. No pertenece pueblo originario)</i>"),
caption = "Participacion en el mercado laboral",
caption.above = TRUE)
## 5.1 Valores predichos de la variable sexo ##
knitreg(list(reg2),
custom.model.names = c("Modelo 1"),
custom.coef.names = c("Intercepto",
"Sexo (mujer=1)"))
## 4.1 Regrasion lineal multiple ## ----
reg2<- lm(participacion_mercado_laboral ~ sexo, data = casen_reg)
reg3 <- lm(participacion_mercado_laboral ~ sexo + educ, data = casen_reg)
reg4 <- lm(participacion_mercado_laboral ~ sexo + educ + nacionalidad, data = casen_reg)
reg5 <- lm(participacion_mercado_laboral ~ sexo + educ + nacionalidad + pueblo_originario, data = casen_reg)
knitreg(list(reg2, reg3, reg4, reg5),
custom.model.names = c("Modelo 1",
"Modelo 2",
"Modelo 3",
"Modelo 4"),
custom.note = "*** p < 0.001; ** p < 0.01; * p < 0.05",
custom.coef.names = c("Intercepto",
"Mujer <br> <i>(Ref. Hombre)</i>",
"Sin estudios <br> <i>(Ref. Ed. básica)</i>",
"Educación media",
"Educación superior",
"Postgrados",
"Nacionalidad extranjera <br> <i>(Ref. Nacionalidad chilena)</i>",
"Pertenece puablo originario <br> <i>(Ref. No pertenece pueblo originario)</i>"),
caption = "Participacion en el mercado laboral",
caption.above = TRUE)
## 5.1 Valores predichos de la variable sexo ##
knitreg(list(reg2),
custom.model.names = c("Modelo 1"),
custom.coef.names = c("Intercepto",
"Sexo (mujer=1)"))
ggeffects::ggpredict(reg2, terms = c("sexo")) %>%
ggplot(aes(x=x, y=predicted)) +
geom_bar(stat="identity", color="grey", fill="grey")+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
labs(title="Sexo", x = "", y = "") +
theme_bw() +
scale_x_continuous(name = "",
breaks = c(0,1),
labels = c("Hombre", "Mujer"))+
scale_y_continuous(limits = c(0,16),
breaks = seq(0,16, by = 1))
## 5.2 Valores predichos reg3 ##
knitreg(list(reg3),
custom.model.names = c("Modelo 2"),
custom.coef.names = c("Intercepto",
"Sin estudios <br> <i>(Ref. Ed. básica)</i>",
"Educación media",
"Educación superior",
"Postgrados)"))
## 5.2 Valores predichos reg3 ##
knitreg(list(reg3),
custom.model.names = c("Modelo 2"),
custom.coef.names = c("Intercepto",
"Sexo (mujer=1)",
"Sin estudios <br> <i>(Ref. Ed. básica)</i>",
"Educación media",
"Educación superior",
"Postgrados)"))
## 5.3 Valores predichos reg4 ##
knitreg(list(reg4),
custom.model.names = c("Modelo 3"),
custom.coef.names = c("Intercepto",
"Sexo (mujer=1)",
"Sin estudios <br> <i>(Ref. Ed. básica)</i>",
"Educación media",
"Educación superior",
"Postgrados)",
"Nacionalidad extranjera <br> <i>(Ref. Nacionalidad chilena)</i>"))
knitreg(list(reg4),
custom.model.names = c("Modelo 3"),
custom.coef.names = c("Intercepto",
"Sexo (mujer=1)",
"Sin estudios <br> <i>(Ref. Ed. básica)</i>",
"Educación media",
"Educación superior",
"Postgrados)",
"Nacionalidad extranjera <br> <i>(Ref. Nacionalidad chilena)</i>",
"Pertenece puablo originario <br> <i>(Ref. No pertenece pueblo originario)</i>"))
knitreg(list(reg5),
custom.model.names = c("Modelo 4"),
custom.coef.names = c("Intercepto",
"Sexo (mujer=1)",
"Sin estudios <br> <i>(Ref. Ed. básica)</i>",
"Educación media",
"Educación superior",
"Postgrados)",
"Nacionalidad extranjera <br> <i>(Ref. Nacionalidad chilena)</i>",
"Pertenece puablo originario <br> <i>(Ref. No pertenece pueblo originario)</i>"))
ggeffects::ggpredict(reg2, terms = c("Sexo")) %>%
ggplot(aes(x=x, y=predicted)) +
geom_bar(stat="identity", color="grey", fill="grey")+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
labs(title="Sexo", x = "", y = "") +
theme_bw() +
scale_x_continuous(name = "",
breaks = c(0,1),
labels = c("Hombre", "Mujer"))+
scale_y_continuous(limits = c(0,16),
breaks = seq(0,16, by = 1))
ggeffects::ggpredict(reg2, terms = c("Educacion")) %>%
ggplot(aes(x=x, y=predicted)) +
geom_bar(stat="identity", color="grey", fill="grey")+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
labs(title="Educacion", x = "", y = "") +
theme_bw() +
scale_x_continuous(name = "",
breaks = c(0,1),
labels = c("Hombre", "Mujer"))+
scale_y_continuous(limits = c(0,16),
breaks = seq(0,16, by = 1))
