# Preparacion Base de datos CASEN #
# Francisca Apablaza #
# Participacion en el mercado laboral #

# Este Scrip es para recodificar la base de datos CASEN y las variables seleccionadas para el presente trabajo #

# 1. Instalacion de paquetes # ----
install.packages("pacman")
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, summarytools, kableExtra, sjPlot, corrplot, sessioninfo, ggplot2)

# 2. Pasos previos # ----
rm(list = ls()) #limpiar area de trabajo
options(scipen = 999) #desactivar notacion cientifica

# 3. Base de Datos # ----
CASEN <- read_sav("C:/Users/Asus/Desktop/2024 Primer Semestre/Opt. Rstudios/Practico 1/CASEN.sav")
dim(CASEN)

# 4. Seleccion de Variables # ----
proc_base <- CASEN %>% select(edad, # Edad
                              sexo, # Sexo
                              e6a_no_asiste, # Nivel educacional mas alto al cual asistio
                              o1, # Trabajo
                              o2, # Trabajo informal
                              o7, # Razon por la cual no busco trabajo
                              o10, # Horas trabajadas
                              o12, # Su trabajo es de tipo
                              o19, # Tipo de contrato
                              o20, #Jornada laboral
                              o21, #Tipo de horario
                              y1, # Sueldo
                              s5, # Tiene hijos
                              r1a, # Pais de nacionalidad
                              r3) # Pertenece a algun pueblo indigena
                              
names(proc_base) #comprobacion
sjlabelled::get_label(proc_base) #atributo de la variable

# 4.1 Renombramiento de las variables # ----
proc_base <- proc_base %>% rename("educ"=e6a_no_asiste, # Nivel educacional
                                  "trabajo"=o1, # Tiene trabajo formal
                                  "trabajo_informal"=o2, # Tiene trabajo informal
                                  "busqueda_trabajo"=o7, # Porque no busco trabajo
                                  "horas_trabajo"=o10, # Horas trabajdas
                                  "tipo_trabajo"=o12, # Que tipo de permanencia tiene en al trabjo
                                  "contrato"=o19, # Tipo de contrato de trabajo
                                  "jornada_labora"=o20, # Jornada laboral
                                  "horario_trabajo"=o21, # Horario laboral
                                  "sueldo"=y1, # Sueldo
                                  "hijos"=s5, # Tiene hijos
                                  "nacionalidad"=r1a, # Pais de nacionalidad
                                  "pueblo_originario"=r3) # Pertenece a algun pueblo originario
names(proc_base)

# 4.2 Re-etiquetado de las variables # ----
proc_base$sexo <- set_label(x = proc_base$sexo, label = "Sexo")
get_label(proc_base$sexo)

proc_base$edad <- set_label(x = proc_base$edad, label = "Edad")
get_label(proc_base$edad)

proc_base$educ <- set_label(x = proc_base$educ, label = "Nivel educacional")
get_label(proc_base$educ)

proc_base$trabajo <- set_label(x = proc_base$trabajo, label = "Trabajo formal")
get_label(proc_base$trabajo)

proc_base$trabajo_informal <- set_label(x = proc_base$trabajo_informal, label = "Trabajo informal")
get_label(proc_base$trabajo_informal)

proc_base$busqueda_trabajo <- set_label(x = proc_base$busqueda_trabajo, label = "Porque no busco trabajo")
get_label(proc_base$busqueda_trabajo)

proc_base$horas_trabajo <- set_label(x = proc_base$horas_trabajo, label = "Horas trabajadas")
get_label(proc_base$horas_trabajo)

proc_base$tipo_trabajo <- set_label(x = proc_base$tipo_trabajo, label = "Tipo de permanencia en el trabajo")
get_label(proc_base$tipo_trabajo)

proc_base$contrato <- set_label(x = proc_base$contrato, label = "Tipo de contrato de trabajo")
get_label(proc_base$contrato)

proc_base$jornada_labora <- set_label(x = proc_base$jornada_labora, label = "Jornada laboral")
get_label(proc_base$jornada_labora)

proc_base$horario_trabajo <- set_label(x = proc_base$horario_trabajo, label = "Horario de trabajo")
get_label(proc_base$horario_trabajo)

proc_base$sueldo <- set_label(x = proc_base$sueldo, label = "Sueldo mensual")
get_label(proc_base$sueldo)

proc_base$hijos <- set_label(x = proc_base$hijos, label = "Tiene hijos")
get_label(proc_base$hijos)

proc_base$nacionalidad <- set_label(x = proc_base$nacionalidad, label = "Pais de nacionalidad")
get_label(proc_base$nacionalidad)

proc_base$pueblo_originario <- set_label(x = proc_base$pueblo_originario, label = "Pertenece a algun pueblo originario")
get_label(proc_base$pueblo_originario)

# 4.3 Recodificacion casos perdidos NA # ----

frq(proc_base$edad) # No es necesario recodificar
frq(proc_base$sexo) # No es necesario recodificar
frq(proc_base$educ) # No es necesario recodificar
frq(proc_base$trabajo) # No es necesario recodificar
frq(proc_base$trabajo_informal) # No es necesario recodificar
frq(proc_base$busqueda_trabajo) # No es necesario recodificar

frq(proc_base$horas_trabajo) # Si es necesario recodificar
proc_base$horas_trabajo <- recode(proc_base$horas_trabajo, "c(-88)=NA")
proc_base$horas_trabajo <- as.numeric(factor(proc_base$horas_trabajo))

frq(proc_base$tipo_trabajo) # Si es necesario recodificar
proc_base$tipo_trabajo <- recode(proc_base$tipo_trabajo, "c(-88, -99)=NA")
proc_base$tipo_trabajo <- as.numeric(factor(proc_base$tipo_trabajo))

frq(proc_base$contrato) # Si es necesario recodificar
proc_base$contrato <- recode(proc_base$contrato, "c(-88)=NA")
proc_base$contrato <- as.numeric(factor(proc_base$contrato))

frq(proc_base$jornada_labora) # Si es necesario recodificar
proc_base$jornada_labora <- recode(proc_base$jornada_labora, "c(-88, -99)=NA")
proc_base$jornada_labora <- as.numeric(factor(proc_base$jornada_labora))

frq(proc_base$horario_trabajo) # Si es necesario recodificar
proc_base$horario_trabajo <- recode(proc_base$horario_trabajo, "c(-88, -99)=NA")
proc_base$horario_trabajo <- as.numeric(factor(proc_base$horario_trabajo))

frq(proc_base$sueldo) # Si es necesario recodificar -88
proc_base$sueldo <- recode(proc_base$sueldo, "c(-88)=NA")
proc_base$sueldo <- as.numeric(factor(proc_base$sueldo))

frq(proc_base$hijos) # Si es necesario recodificar
proc_base$hijos <- recode(proc_base$hijos, "c(-88)=NA")
proc_base$hijos <- as.numeric(factor(proc_base$hijos))

frq(proc_base$nacionalidad) # No es necesario recodificar
frq(proc_base$pueblo_originario) # No es necesario recodificar

# 5. Recodificacion de las variables # ----
names(proc_base)
# Sexo # XXXXXXXX
frq(proc_base$sexo) #Descriptivo
proc_base$sexo <- recode(proc_base$sexo, "1=1; 2=0") 
proc_base$sexo <- factor(proc_base$sexo, levels = c("0", "1"), labels = c("Mujer", "Hombre")) #Recodificar
summary(proc_base$sexo) #Cornfirmacion

# Nivel educacion # XXXXXXXXXX
frq(proc_base$educ) #Descriptivo
proc_base$educ <- recode(proc_base$educ, "1=0; 2:7=1; 8:11=2; 12:13=3; 14:15=4") 
proc_base$educ <- factor(proc_base$educ, levels = c("0", "1", "2", "3", "4"), labels = c("Sin estudios", "Educacion basica", "Educacion media", "Educacion superior", "Postgrados")) #Recodificar
summary(proc_base$educ) #Confirmacion

# Trabajo formal # XXXXXXXXXXXXXXXXX
frq(proc_base$trabajo) #Descriptivo
proc_base$trabajo <- recode(proc_base$trabajo, "1=1; 2=0") 
proc_base$trabajo <- factor(proc_base$trabajo, levels = c("0", "1"), labels = c("Trabaja", "No trabaja")) #Recodificar
summary(proc_base$trabajo) #Confirmacion

# Trabajo informal # XXXXXXXXXXXXXXXXX
frq(proc_base$trabajo_informal) #Descriptivo
proc_base$trabajo_informal <- recode(proc_base$trabajo_informal, "1=1; 2=0") 
proc_base$trabajo_informal <- factor(proc_base$trabajo_informal, levels = c("0", "1"), labels = c("Trabaja", "No trabaja")) #Recodificar
summary(proc_base$trabajo_informal) #Confirmacion

# Porque no busco trabajo # XXXXXXXXXXXXXXXXXXXXXX
frq(proc_base$busqueda_trabajo) #Descriptivo
proc_base$busqueda_trabajo <- recode(proc_base$busqueda_trabajo, "c(1,2,6,7,8,9,11,12,13,14,15,16,17,18,19)=0; c(3,4,5,10)=1") 
proc_base$busqueda_trabajo <- factor(proc_base$busqueda_trabajo, levels = c("0", "1"), labels = c("Otro motivo", "Razones de cuidado")) #Recodificar
summary(proc_base$busqueda_trabajo) #Confirmacion

# Horas trabajadas semanalmente # 
frq(proc_base$horas_trabajo) #Descriptivo
proc_base$horas_trabajo <- recode(proc_base$horas_trabajo, "1:20=0; 21:40=0.5; 41:92=1") 
summary(proc_base$horas_trabajo) #Confirmacion

#  #
frq(proc_base$tipo_trabajo) #Descriptivo
proc_base$tipo_trabajo <- recode(proc_base$tipo_trabajo, "1=1; 2=0") 
proc_base$trabajo_informal <- factor(proc_base$trabajo_informal, levels = c("0", "1"), labels = c("Trabaja", "No trabaja")) #Recodificar
summary(proc_base$trabajo_informal) #Confirmacion

## 5.3 Brecha salarial ## ----
frq(proc_base$y1) #Descriptivo
proc_base$y1 <- recode(proc_base$y1, "c(-88)=NA")#Recodificacion
proc_base$y1 <- recode(proc_base$y1, "209000:326200=1; 326920:1000000=2; 1000050:25000000=3; 0:208000=0")
proc_base$y1 <- set_labels(proc_base$y1,
                           labels=c( "Sueldo inf"=1,
                                     "Sueldo pro"=2,
                                     "Sueldo sup"=3,
                                     "Sin sueldo"=0))
summary(proc_base$y1) #Cornfirmacion

#Etiquetado
proc_base <- proc_base %>% rename("Salario"=y1) #Salario 

## 5.4 Sexo ## ----
frq(proc_base$sexo) #Descriptivo
proc_base$sexo <- car::recode(proc_base$sexo, "1=0;2=1")
proc_base$sexo <- factor(proc_base$sexo,
                         labels=c( "Hombre",
                                   "Mujer"),
                         levels=c(0,1))
get_label(proc_base$sexo)
frq(proc_base$sexo)
summary(proc_base$sexo) #Cornfirmacion

# 6. Analisis de las variables  # ----

## 6.1 Revicion descriptiva de los datos ## ----
names(proc_base) # Muestra los nombres de las variables de la base de datos
dim(proc_base) # Dimensiones
sjmisc::descr(proc_base,
              show = c("label","range", "mean", "sd", "NA.prc", "n"))%>%
              kable(.,"markdown")
summarytools::dfSummary(proc_base, plain.ascii = FALSE)
view(dfSummary(proc_base, headings=FALSE))

## 6.2 Visualizacion de variables ## ----

### Participacion en el mercado laboral ### ----
# a) Realizo trabajo, sin contar trabajo en el hogar 
sjt.xtab(proc_base$trbj, proc_base$sexo,
         show.col.prc=TRUE,
         show.summary=FALSE,
         encoding = "UTF-8"
)

# b) Realizo trabajo de manera informal
sjt.xtab(proc_base$`trbj_no formal`, proc_base$sexo,
         show.col.prc=TRUE,
         show.summary=FALSE,
         encoding = "UTF-8"
)

# c) Cuantas horas trabajo a la semana
sjt.xtab(proc_base$horas_trbj, proc_base$sexo,
         show.col.prc=TRUE,
         show.summary=FALSE,
         encoding = "UTF-8"
)

### Rol de la familia ### ----
# d) Jefe de hogar
sjt.xtab(proc_base$jefe_h, proc_base$sexo,
         show.col.prc=TRUE,
         show.summary=FALSE,
         encoding = "UTF-8"
)

# e) Conformacion de parejas dentro del hogar
sjt.xtab(proc_base$pareja, proc_base$trbj,
         show.col.prc=TRUE,
         show.summary=FALSE,
         encoding = "UTF-8"
)

# f) El padre o la madre viven en la vivienda
sjt.xtab(proc_base$mp_vivienda, proc_base$sexo,
         show.col.prc=TRUE,
         show.summary=FALSE,
         encoding = "UTF-8"
)

# g) Razon de la no busqueda de trabjao
sjt.xtab(proc_base$busqueda_trbj, proc_base$sexo,
         show.col.prc=TRUE,
         show.summary=FALSE,
         encoding = "UTF-8"
)

### Brecha salarial ### ----
# h) Salario
# Crear el gráfico usando ggplot2
sjt.xtab(proc_base$Salario, proc_base$sexo,
         show.col.prc=TRUE,
         show.summary=FALSE,
         encoding = "UTF-8"
)

graph8 <- proc_base %>% ggplot(aes(x = Salario, fill = sexo)) + 
  geom_bar() +
  xlab("Salario") +
  ylab("Cantidad") + 
  labs(fill="Sexo")+
  scale_fill_discrete(labels = c('Hombre','Mujer'))

graph8
ggsave(graph8, file="3. output/graph8.png")

# 7. Guardar # ----
save(proc_base,file = "1. input/CASEN_recod.rdata")

# 5. Guardar base de datos # ----
# 5.1 Guardar base de datos para escala #
casen_esca <- select(proc_base, 
                     trabajo,
                     trabajo_informal,
                     horas_trabajo,
                     tipo_trabajo,
                     contrato,
                     jornada_labora,
                     horario_trabajo,
                     sueldo)

casen_esca <- as.data.frame(casen_esca) # Reformatear objeto#

save(casen_esca, file = "1. input/casen_esca.rdata") # Guardar base de datos para la escala #

# 5.2 Guardar base de datos regresion #
casen_reg <- proc_base %>% select(proc_base, edad, sexo, e6a_no_asiste)



